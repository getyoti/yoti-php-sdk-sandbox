<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ContentType.proto

namespace Yoti\Protobuf\Attrpubapi;

use UnexpectedValueException;

/**
 * Protobuf type <code>attrpubapi_v1.ContentType</code>
 */
class ContentType
{
    /**
     * Generated from protobuf enum <code>UNDEFINED = 0;</code>
     */
    const UNDEFINED = 0;
    /**
     * Generated from protobuf enum <code>STRING = 1;</code>
     */
    const STRING = 1;
    /**
     * Generated from protobuf enum <code>JPEG = 2;</code>
     */
    const JPEG = 2;
    /**
     * Generated from protobuf enum <code>DATE = 3;</code>
     */
    const DATE = 3;
    /**
     * Generated from protobuf enum <code>PNG = 4;</code>
     */
    const PNG = 4;
    /**
     * Generated from protobuf enum <code>JSON = 5;</code>
     */
    const JSON = 5;
    /**
     * Generated from protobuf enum <code>MULTI_VALUE = 6;</code>
     */
    const MULTI_VALUE = 6;
    /**
     * Generated from protobuf enum <code>INT = 7;</code>
     */
    const INT = 7;

    private static $valueToName = [
        self::UNDEFINED => 'UNDEFINED',
        self::STRING => 'STRING',
        self::JPEG => 'JPEG',
        self::DATE => 'DATE',
        self::PNG => 'PNG',
        self::JSON => 'JSON',
        self::MULTI_VALUE => 'MULTI_VALUE',
        self::INT => 'INT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

